<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.AdminMapper">

	<sql id="Base_Column_List" >
	  fid, content, isReplied, repliedMsg, repliedTime, createTime, userId
	</sql>
	
	<select id="selectAllFeedBackAdmin" resultType="com.entity.FeedBack" parameterType="java.util.Map" >
			select 
			<include refid="Base_Column_List" />, uname as user
			from feedbacks as A
			natural join users as B
			where A.userId = B.uid
     		<if test="isReplied != -1" >
				and isReplied = #{isReplied,jdbcType=INTEGER}
			</if>
     		<if test="order != null" >
				order by createTime ${order}
			</if>
	</select>

	<update id="updateFeedBackAdmin" parameterType="com.entity.FeedBack" >
	  update feedbacks
	  set isReplied = #{isReplied,jdbcType=VARCHAR},
	    repliedMsg = #{repliedMsg,jdbcType=VARCHAR},
	    repliedTime = #{repliedTime,jdbcType=TIMESTAMP}
	  where fid = #{fid,jdbcType=INTEGER}
	</update>
	
	<insert id="insertFood" parameterType="com.entity.Food"  useGeneratedKeys="true" keyProperty="foodId">
		insert into foods (name, imgUrl, material, description, categoryId, price)
		values (
		#{name,jdbcType=VARCHAR},
		#{imgUrl,jdbcType=VARCHAR},
		#{material,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR},
		#{categoryId,jdbcType=INTEGER},
		#{price,jdbcType=INTEGER})
	</insert>

	<update id="updateFoodAdmin" parameterType="com.entity.Food" >
	  update foods
	  set name = #{name,jdbcType=VARCHAR},
   		<if test="imgUrl != null" >
		  imgUrl = #{imgUrl,jdbcType=VARCHAR},
		</if>
		material = #{material,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR},
		categoryId = #{categoryId,jdbcType=INTEGER},
		price = #{price,jdbcType=INTEGER}
	  where foodId = #{foodId,jdbcType=INTEGER}
	</update>
	
	<delete id="deleteFood" parameterType="java.lang.Integer" >
		delete from foods
		where foodId = #{foodId,jdbcType=INTEGER}
	</delete>
	
	<select id="selectAllFood" resultType="com.entity.Food">
		select *, cname as category
		from foods as A
		natural join categories as B
		where A.categoryId = B.cid
	</select>
	
	<select id="queryFoodsByKeyword" resultType="com.entity.Food" parameterType="java.lang.String" >
		select *, cname as category
		from foods as A
		natural join categories as B
		where A.categoryId = B.cid
		 and name like CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
	</select>
	
	<insert id="insertPlan" parameterType="java.util.Map">
		insert into plans (day, pid, foodId)
		values (
		#{day,jdbcType=INTEGER},
		#{pid,jdbcType=INTEGER},
		#{foodId,jdbcType=INTEGER})
	</insert>
	
	<delete id="deletePlanByFoodId" parameterType="java.lang.Integer" >
		delete from plans
		where foodId = #{foodId,jdbcType=INTEGER}
	</delete>
	
	<select id="queryCharacters" resultType="com.entity.Character">
		select * from characters
	</select>
	
</mapper> 